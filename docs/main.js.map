{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/api.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.development.ts","./src/main.ts","./src/mocks/browser.ts","./src/mocks/handlers.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n    getCats(count: number): Observable<any> {\n      return this.http.get<any>(`https://api.thecatapi.com/v1/images/search?limit=${count}`);\n    }\n\n    getVoteCount(): Observable<any> {\n      return this.http.get<any>(`${environment.API_BASE}/vote-count`);\n    }\n\n    submitVote(vote: any): Observable<any> {\n      return this.http.post<any>(`${environment.API_BASE}/vote`, vote);\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\nimport { ApiService } from './api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n\n  cat1: any;\n  cat2: any;\n  voteCount: number = 0;\n\n  loading: boolean = true;\n  submitted: boolean = false;\n  errorMessage: string = '';\n\n  voteForm = this.formBuilder.group({\n    bestCat: ['', Validators.required]\n  })\n\n  constructor(\n    private title: Title,\n    private apiService: ApiService,\n    private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.title.setTitle(`Best Cat - ${environment.NAME}`)\n    this.loadCats();\n    this.loadVoteCount();\n  }\n\n  loadCats(): void {\n    this.apiService.getCats(2).subscribe({\n      next: (response) => {\n        this.cat1 = response[0];\n        this.cat2 = response[1];\n        this.loading = false;\n      },\n      error: (error) => {\n        const msg = 'Failed to load cats';\n        console.error(msg, error);\n        this.showError(msg);\n      }\n    });\n  }\n\n  loadVoteCount(): void {\n    this.apiService.getVoteCount().subscribe({\n      next: (response) => {\n        this.voteCount = response.voteCount;\n      },\n      error: (error) => {\n        const msg = 'Failed to load vote count';\n        console.error(msg, error);\n        this.showError(msg);\n      }\n    });\n  }\n\n  submitVote(): void {\n    if (this.voteForm.invalid) {\n      this.submitted = true;\n      return;\n    }\n    this.submitted = false;\n  \n    this.apiService.submitVote(this.voteForm.value).subscribe({\n      next: (response) => {\n        //TODO: Get something from submit vote\n        \n        this.voteForm.reset();\n        this.loadCats();\n        this.loadVoteCount();\n      },\n      error: (error) => {\n        const msg = 'Failed to submit vote';\n        console.error(msg, error);\n        this.showError(msg);\n      }\n    });\n  }\n\n  showError(message: string, durationMillis: number = 3000) {\n    this.errorMessage = message;\n    if (durationMillis) {\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, durationMillis);\n    }\n  }\n\n}\n","<main class=\"flex min-h-screen flex-col items-center p-12\">\n\n  <h1 class=\"mb-4 text-4xl font-bold text-gray-900 md:text-5xl lg:text-6xl\">\n    Who is the best cat?\n  </h1>\n\n  <div *ngIf=\"!loading\">\n    <form [formGroup]=\"voteForm\" (ngSubmit)=\"submitVote()\">\n      <div>\n        <input class=\"sr-only peer/1\" type=\"radio\" id=\"cat1\" name=\"bestCat\" [value]=\"cat1?.id\" formControlName=\"bestCat\"/>\n        <input class=\"sr-only peer/2\" type=\"radio\" id=\"cat2\" name=\"bestCat\" [value]=\"cat2?.id\" formControlName=\"bestCat\"/> \n        <label for=\"cat1\" \n          [ngStyle]=\"{ 'background-image': 'url(' + cat1.url + ')' }\" \n          class=\"inline-block peer-checked/1:ring-cyan-600 peer-checked/1:ring-8 peer-checked/2:opacity-75 h-96 w-96 rounded-l-lg bg-cover cursor-pointer\"\n          >\n        </label>\n        <label for=\"cat2\" \n          [ngStyle]=\"{ 'background-image': 'url(' + cat2.url + ')' }\" \n          class=\"inline-block peer-checked/2:ring-cyan-600 peer-checked/2:ring-8 peer-checked/1:opacity-75 h-96 w-96 rounded-r-lg bg-cover cursor-pointer\"\n          >          \n        </label>\n      </div>\n\n      <div *ngIf=\"submitted && voteForm.controls.bestCat.hasError('required')\" class=\"text-red-500 mt-2\">\n        Please select the best cat.\n      </div>\n\n      <button type=\"submit\" \n        class=\"p-4 mt-4 bg-white enabled:hover:bg-gray-100 disabled:bg-gray-200 disabled:text-gray-400 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow w-full\">\n        VOTE\n      </button>\n    </form>\n  </div>\n\n  <div class=\"py-4\">\n    You have voted for {{voteCount}} {{voteCount !== 1 ? 'cats': 'cat'}}!\n  </div>\n  \n  <div *ngIf=\"errorMessage\" class=\"p-2 w-96 bg-rose-300 text-center rounded-lg cursor-pointer\" role=\"alert\" (click)=\"errorMessage=''\">\n    {{errorMessage}}\n  </div>\n</main>","import { NgModule } from '@angular/core';\nimport { BrowserModule, Title } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, \n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    Title\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { worker } from \"src/mocks/browser\";\nimport { rest } from \"msw\";\n\nworker.start();\n\n// Propagate the worker and `rest` references to be globally available. \n// This would allow to modify request handlers on runtime. \ndeclare global {\n  interface Window {\n    msw: any;\n  }\n}\n\nwindow.msw = { \n  worker, \n  rest, \n}; \n\nexport const environment = {\n  NAME: 'Development',\n  API_BASE: ''\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { setupWorker } from 'msw'\nimport { handlers } from './handlers'\n\n// This configures a Service Worker with the given request handlers.\nexport const worker = setupWorker(...handlers)","import { rest } from 'msw'\n\nexport const handlers = [\n\n  rest.get('/vote-count', (req, res, ctx) => {\n    \n    let voteCount: number = parseInt( sessionStorage.getItem('voteCount') ?? '0');\n    \n    return res(\n      ctx.status(200),\n      ctx.json({\n        voteCount\n      })\n    )\n  }),\n\n  rest.post('/vote', async (req, res, ctx) => {\n\n    let voteCount: number = parseInt(sessionStorage.getItem('voteCount') ?? '0');\n    voteCount++;\n    sessionStorage.setItem('voteCount', voteCount.toString());\n    const payload = await req.json()\n    return res(\n      ctx.status(200),\n      ctx.json({\n        id: payload.bestCat,\n        agree: 20,\n        disagree: 8\n      })\n    )\n  }),\n\n]"],"names":["environment","ApiService","constructor","http","getCats","count","get","getVoteCount","API_BASE","submitVote","vote","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","Validators","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_div_3_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","ɵɵelement","ɵɵtemplate","AppComponent_div_3_div_7_Template","ɵɵadvance","ɵɵproperty","ctx_r0","voteForm","cat1","id","cat2","ɵɵpureFunction1","_c0","url","submitted","controls","bestCat","hasError","AppComponent_div_6_Template_div_click_0_listener","_r6","ctx_r5","errorMessage","ɵɵtextInterpolate1","ctx_r1","AppComponent","title","apiService","formBuilder","voteCount","loading","group","required","ngOnInit","setTitle","NAME","loadCats","loadVoteCount","subscribe","next","response","error","msg","console","showError","invalid","value","reset","message","durationMillis","setTimeout","ɵɵdirectiveInject","Title","i2","i3","FormBuilder","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_div_3_Template","AppComponent_div_6_Template","ɵɵtextInterpolate2","BrowserModule","HttpClientModule","FormsModule","ReactiveFormsModule","AppModule","bootstrap","imports","declarations","worker","rest","start","window","msw","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","setupWorker","handlers","req","res","parseInt","sessionStorage","getItem","status","json","_ref","_asyncToGenerator","setItem","toString","payload","agree","disagree","_x","_x2","_x3","apply","arguments"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}